"""
두니발 박사 잡기
두니발 박사는 검문을 피해 산길로만 이동한다
두니발 박사는 교도소를 탈출한 당일, 교도소와 인접한 마을 하나로 도망쳐 은신한다.
두니발 박사는 수색을 피하기 위해 매일 인접한 마을로 움직여 은신한다

위 가설을 증명하기 위해 교도소로부터 산길로 연결된 n개 마을들의 지도를 구했다.
움직일 수 있는 마을이 여러 개일 경우 그중 하나를 임의로 선택한다.
d일 후에 두니발 박사가 각 마을에 있을 확률을 계산하는 프로그램을 작성하라.

첫 줄에는 지도에 포함된 마을의 수N 와 탈출 후 지금까지 지난 일 수 D
그리고 교도소가 있는 마을의 번호P가 주어진다.
마을은 0번부터 N-1번까지 순서대로 번호가 매겨져 있다. 그 후 N줄에는 각각
N개의 정수로 행렬 A가 주어진다.

ex)
0 1 1 1 0
1 0 0 0 1
1 0 0 0 0
1 0 0 0 0
0 1 0 0 0
이라면 0번 마을과 1, 2, 3번 마을이 연결되어 있고, 1번 마을은 0, 4번 마을과 연결되어있다.
두니발 박사는 무조건 움직인다.

0 1 1 1 0 0 0 0
1 0 0 1 0 0 0 0
1 0 0 1 0 0 0 0
1 1 1 0 1 1 0 0
0 0 0 1 0 0 1 1
0 0 0 1 0 0 0 1
0 0 0 0 1 0 0 0
0 0 0 0 1 1 0 0

마을에서 박사가 발견될 확률을 출력하라.
"""
N, D, P = map(int, input().split())
MAP = []
cache = [0]*N
for _ in range(N):
    MAP.append(list(map(int, input().split())))
    
def move_dr(now, cnt, p):
    #d일 까지 돌았을 경우
    if D == cnt:
        cache[now] += p
        print(cache)
        return 
    for i in range(N):
        #길이 있다면
        if MAP[now][i]==1:
            p *= (1 / MAP[now].count(1))
            move_dr(i,cnt+1, p)
            p *= (MAP[now].count(1))
        
    print(cache)

move_dr(P, 0, 1)